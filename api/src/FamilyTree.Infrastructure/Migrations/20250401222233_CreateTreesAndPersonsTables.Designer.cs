// <auto-generated />
using System;
using FamilyTree.Infrastructure.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FamilyTree.Infrastructure.Migrations
{
    [DbContext(typeof(EntityFrameworkDbContext))]
    [Migration("20250401222233_CreateTreesAndPersonsTables")]
    partial class CreateTreesAndPersonsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FamilyTree.Domain.Persons.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<string>("BirthLocation")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("birth_location");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("death_date");

                    b.Property<string>("DeathLocation")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("death_location");

                    b.Property<Guid?>("FamilyTreeId")
                        .HasColumnType("uuid")
                        .HasColumnName("family_tree_id");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("given_name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_persons");

                    b.HasIndex("FamilyTreeId")
                        .HasDatabaseName("ix_persons_family_tree_id");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("FamilyTree.Domain.Trees.Tree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_trees");

                    b.ToTable("trees", (string)null);
                });

            modelBuilder.Entity("FamilyTree.Domain.Persons.Person", b =>
                {
                    b.HasOne("FamilyTree.Domain.Trees.Tree", "FamilyTree")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyTreeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_persons_trees_family_tree_id");

                    b.Navigation("FamilyTree");
                });

            modelBuilder.Entity("FamilyTree.Domain.Trees.Tree", b =>
                {
                    b.Navigation("FamilyMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
